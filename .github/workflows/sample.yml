
name: Workflow For Running Azure Terraform Code

on:
 pull_request:
   branches: [dev]
   types: [closed]
 push:
   branches: [dev]
env:
  #TERRAFORM_DESTROY: "YES"
  ENVIRONMENT: "Development"
  ARM_CLIENT_ID: ${{secrets.ARM_CLIENT_ID}}
  ARM_CLIENT_SECRET: ${{secrets.ARM_CLIENT_SECRET}}
  ARM_SUBSCRIPTION_ID: ${{secrets.ARM_SUBSCRIPTION_ID}}
  ARM_TENANT_ID: ${{secrets.ARM_TENANT_ID}}
  ACTIONS_STEP_DEBUG: true
  PACKER_PRODUCT_VERSION: 1.8.5
  TERRAFORM_PRODUCT_VERSION: 1.7.3

jobs:
  tools_check:
    name: 'Checking Tools Status'
    runs-on: ubuntu-latest
    defaults:
     run:
       shell: bash
    steps:
    - name: Print Runner Hostname
      run: hostname
      shell: bash
    - name: Print Runner IP Address
      run: curl -sL https://ipconfig.io
      shell: bash
    - name: Setup Terraform with specified version on the runner
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ env.TERRAFORM_PRODUCT_VERSION }}
    - name: Setup `packer`
      uses: hashicorp/setup-packer@main
      id: setup
      with:
        version: ${{ env.PACKER_PRODUCT_VERSION }}
    - name: Check Terraform & Packer Version
      run: terraform version && packer version
      shell: bash

  terraform_init:
    needs: tools_check
    name: 'Files Check & Terraformm Init & Validate'
    runs-on: ubuntu-latest
    defaults:
     run:
       shell: bash
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: List Repo Files
      run: |
       ls -al
       pwd
       free
    - name: Perform Terraform Init validate Format
      id: init
      shell: bash
      run: |
       #export TF_LOG="TRACE"
       terraform init && terraform validate && terraform fmt

  terraform_plan:
    needs: terraform_init
    name: 'Running Terraform Plan'
    runs-on: ubuntu-latest
    defaults:
     run:
       shell: bash
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: List Repo Files
      run: |
       ls -al
       pwd
       free
    - name: Perform Terraform Init & Plan
      id: init
      shell: bash
      run: |
       #export TF_LOG="TRACE"
       terraform init && terraform plan

  terraform_apply:
    needs: terraform_plan
    name: 'Running Terraform Apply'
    runs-on: ubuntu-latest
    defaults:
     run:
       shell: bash
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: List Repo Files
      run: |
       ls -al
       pwd
       free
    - name: Perform Terraform Init & Apply
      id: init
      shell: bash
      run: |
       #export TF_LOG="TRACE"
       terraform init && terraform apply --auto-approve
       terraform state list


  # terraform_destroy:
  #   needs: 
  #   name: 'Running Terraform Apply'
  #   runs-on: ubuntu-latest
  #   defaults:
  #    run:
  #      shell: bash
  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v3
  #   - name: List Repo Files
  #     run: |
  #      ls -al
  #      pwd
  #      free
  #   - name: Perform Terraform Init & Apply
  #     id: init
  #     shell: bash
  #     run: |
  #      #export TF_LOG="TRACE"
  #      terraform init && terraform apply --auto-approve
  #      terraform state list     